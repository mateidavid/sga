#!/bin/bash
source lib.common.sh
set -eEu
set_custom_trap ERR

get_files () {
    zc "${stats_files[@]}"
}
get_re () {
    get_files | grep "^RE" | grep -v "len" | cut -f 3-
}
get_ce () {
    get_files | grep "^CE" | grep -v "len" | cut -f 2-
}
get_ce_normal () {
    get_ce | awk '$3==0 && $4==0'
}
get_ce_unmappable () {
    get_ce | awk '$3==1'
}
get_ce_lowcomplex () {
    get_ce | awk '$4==1'
}
get_sum () {
    awk '{s+=$1} END{print s}'
}

[ $# -ge 1 ] || crash "use: $0 <stats_files>"
stats_files=("$@")

ref_bp=63025520
printab "bp.ref" "$ref_bp"

num_reads=$(get_re | wc -l)
printab "num.reads" "$num_reads"
reads_bp=$(get_re | cut -f 2 | get_sum)
printab "bp.reads" "$reads_bp"

printab "num.contigs" "$(get_ce | wc -l)"
printab "num.contigs.normal" "$(get_ce_normal | wc -l)"
printab "bp.contigs" "$(get_ce | cut -f 2 | get_sum)"
printab "bp.contigs.normal" "$(get_ce_normal | cut -f 2 | get_sum)"
printab "bp.contigs.normal.multichunk" "$(get_ce_normal | awk '$5>1' | cut -f 2 | get_sum)"

num_mutations=$(get_ce | cut -f 6 | get_sum)
printab "num.mut" "$num_mutations"

num_chunks=$(get_re | cut -f 5 | get_sum)
printab "num.chunks" "$num_chunks"

num_chunks_mappable=$(get_re | cut -f 4 | tr ',' '\n' | grep -v '^*' | wc -l)
printab "num.chunks.mappable" "$num_chunks_mappable"

reads_bp_mappable=$(get_re | cut -f 4 | tr ',' '\n' | grep -v '^*' | get_sum)
printab "bp.mappable" "$reads_bp_mappable" \
    "($(echo "scale=4; $reads_bp_mappable / $reads_bp" | bc))"

reads_bp_unmappable=$(get_re | cut -f 4 | tr ',' '\n' | grep '^*' | cut -c 2- | get_sum)
printab "bp.unmappable" "$reads_bp_unmappable" \
    "($(echo "scale=4; $reads_bp_unmappable / $reads_bp" | bc))"

printab "bp.mut" "$(get_ce | cut -f 13 | get_sum)"

printab "bp.per.chunk" "$(echo "scale=2; $reads_bp / $num_chunks" | bc)"
printab "mappable.bp.per.mappable.chunk" \
    "$(echo "scale=2; $reads_bp_mappable / $num_chunks_mappable" | bc)"

printab "expected.bp.per.chunk" "$(echo "scale=2; $ref_bp / (2 * $num_reads)" | bc)"
printab "mutations.per.mappable.chunk" "$(echo "scale=2; $num_mutations / $num_chunks_mappable" | bc)"
